{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","g1","g2","localeCompare","length","reverse","App","useState","setSortType","setIsReversed","className","type","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"uPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGF,SAASC,EACPC,EACAC,EACAC,GAEA,IAAMC,EAAY,YAAOH,GAsBzB,OApBAG,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQL,GACN,IAAK,MACH,OAAOI,EAAGE,cAAcD,GAE1B,IAAK,SACH,OAAOD,EAAGG,OAASF,EAAGE,OAExB,IAAK,OACH,OAAO,EAET,QACE,OAAO,MAITN,GACFC,EAAaM,UAGRN,EAGF,IAAMO,EAAgB,WAC3B,MAAgCC,mBAAS,QAAzC,mBAAOV,EAAP,KAAiBW,EAAjB,KACA,EAAoCD,oBAAS,GAA7C,mBAAOT,EAAP,KAAmBW,EAAnB,KAOA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMJ,EAAY,QAC3BE,UAAWG,IACT,iBACA,CAAE,WAAyB,QAAbhB,IALlB,iCAWA,wBACEc,KAAK,SACLC,QAAS,kBAAMJ,EAAY,WAC3BE,UAAWG,IACT,oBACA,CAAE,WAAyB,WAAbhB,IALlB,4BAWA,wBACEc,KAAK,SACLC,QAAS,kBAAMH,GAAeX,IAC9BY,UAAWG,IACT,oBACA,CAAE,YAAaf,IALnB,sBAWe,SAAbD,GAAuBC,IAErB,wBACEa,KAAK,SACLD,UAAU,4BACVE,QAAS,kBA7CnBJ,EAAY,aACZC,GAAc,IAyCN,sBAUN,6BACGd,EAAkBD,EAAiBG,EAAUC,GAC3CgB,KAAI,SAACC,GAAD,OACH,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC3GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f1360f66.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: string,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case 'abc':\n        return g1.localeCompare(g2);\n\n      case 'length':\n        return g1.length - g2.length;\n\n      case 'none':\n        return 1;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState('none');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const resetList = () => {\n    setSortType('none');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortType('abc')}\n          className={cn(\n            'button is-info',\n            { 'is-light': sortType !== 'abc' },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortType('length')}\n          className={cn(\n            'button is-success',\n            { 'is-light': sortType !== 'length' },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setIsReversed(!isReversed)}\n          className={cn(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== 'none' || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => resetList()}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {getReorderedGoods(goodsFromServer, sortType, isReversed)\n          .map((good) => (\n            <li\n              data-cy=\"good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}